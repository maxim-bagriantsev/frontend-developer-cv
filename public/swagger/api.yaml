openapi: 3.0.0
info:
  title: SkillMaps API
  version: 1.0.0
  description: Описание API взаимодействия фронта сайта и панели управления администратора с бэком
servers:
  - url: https://skillmaps.ru/api
    description: Production Server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: user
    description: |-
      API, связанное с учетной записью пользователя и данными о нём:

      *   регистрация и авторизация
      *   получение информации о пользователе для отображения на странице
      *   подтверждение регистрации и повторная отправка письма-подтверждения
      *   смена пароля и электронной почты
      *   добавление ролей пользователя (необходимы права администратора)
      *   создание инвайтов для регистрации
  - name: map
    description: |-
      Карта компетенций пользователя, в которой хранится информация о пользовательских скиллах и материалах
  - name: skill
    description: |-
      База скиллов и их связь с материалами
  - name: specialization
    description: |-
      Специализации и их связь со скиллами
  - name: material
    description: Работа со списком материалов, добавление, обновление и удаление
  - name: answer
    description: База ответов из анкеты пользователя при регистрации
  - name: ticket
    description: >-
      Tickets - пользовательские жалобы на материалы

      Feedback - обратная связь пользователя. Жалобы на баги, предложения новых материалов или скиллов, отзывы
  - name: sub
    description: Подписка и промокоды
paths:
  /user/registration:
    post:
      tags:
        - user
      summary: Регистрация пользователя
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: Электронная почта
                  type: string
                  example: myemail@email.com
                name:
                  description: Имя
                  type: string
                  example: Иван
                lastName:
                  description: Фамилия
                  type: string
                  example: Иванов
                password:
                  description: Пароль
                  type: string
                  example: password
                invite:
                  description: Код приглашения
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiVGVzdFRva2VuIC0gMjQuMTIuMjAyMSIsImlhdCI6MTY0MDMzNTA3NSwiZXhwIjoxNjQwMzM4Njc1fQ.ctGzBqgcVUt7eXTbjckYVJ2_3VrPEWxmLBDBMZ2QsyQ
                invitedBy:
                  description: id пригласившего пользователя
                  type: number
                  example: 1
                sub:
                  description: Пробная подписка на 7 дней
                  type: boolean
                  example: true
      responses:
        '200':
          description: Регистрация успешно завершена
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Идентификатор нового пользователя
                    type: number
                    example: 2
        '500':
          description: Ошибка во время регистрации
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: email must be unique
  /user/signin:
    post:
      tags:
        - user
      summary: Авторизация пользователя
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: Электронная почта
                  type: string
                  example: myemail@email.com
                password:
                  description: Пароль
                  type: string
                  example: password
      responses:
        '200':
          description: Авторизация прошла успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    description: Токен пользователя
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjQxODk1MDg3LCJleHAiOjE2NDE5ODE0ODd9.JHvK3JTv_M_Dkucbv9RgAyeZppCFXcd2TJkR2Z7ck2o
        '500':
          description: Ошибка во время авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid password
  /user/{userId}:
    get:
      tags:
        - user
      summary: Получить данные другого пользователя
      description: >-
        Используется для получения информации о **другом** пользователе (*вместо* ***getAuthedUserData***, *который используется для получения информации о текущем пользователе*). Например, на странице резюме.
      parameters:
        - in: path
          name: userId
          schema:
            type: number
            example: 1
          required: true
          description: Уникальный идентификатор пользователя
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Идентификатор
                    type: string
                    example: 1
                  email:
                    description: Электронная почта
                    type: string
                    example: myemail@email.com
                  name:
                    description: Имя
                    type: string
                    example: Иван
                  lastName:
                    description: Фамилия
                    type: string
                    example: Иванов
                  status:
                    description: Статус активации
                    type: string
                    enum:
                      - pending
                      - active
                    example: active
                  description:
                    description: Текст "о себе"
                    type: string
                    example: Frontend/Backend JS-разработчик
                  telegram:
                    description: Логин в телеграм
                    type: string
                    example: myTelegramNickname
                  isLinkShared:
                    description: Открыто ли резюме
                    type: boolean
                    example: true
                  isTelegramShared:
                    description: Открыта ли ссылка на телеграм
                    type: boolean
                    example: true
                  isNameShared:
                    description: Открыто ли имя
                    type: boolean
                    example: true
                  invited_by_id:
                    description: Идентификатор пригласившего
                    type: number
                    example: 1
                  Roles:
                    description: Массив, содержащий все дополнительные роли
                    type: array
                    items:
                      type: string
                    example: [{ code: 'admin' }]
                  ActivationCode:
                    properties:
                      code:
                        description: Код подтверждения почты
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InYuc2hhcmtvdkBtZWNoYW5pY2EuYWdlbmN5IiwiaWF0IjoxNjM5NDg3MDk2fQ.O3Sfylm5LLEfZ7HQ9i6k7g_orFXcsg3smtnhFoGa-o0
                  Questions:
                    description: Ответы на вопросы при регистрации
                    type: array
                    items:
                      type: object
                    example:
                      [
                        {
                          label: 'Сфера',
                          UserAnswer: { answer: 'Разработка' },
                        },
                        {
                          label: 'Кто ты?',
                          UserAnswer: { answer: 'Разработчик' },
                        },
                        {
                          label: 'Языки программирования',
                          UserAnswer: { answer: 'JavaScript' },
                        },
                        {
                          label: 'Направление',
                          UserAnswer: { answer: 'Frontend' },
                        },
                      ]
                  Map:
                    properties:
                      id:
                        description: Идентификатор карты пользователя
                        type: number
                        example: 1
                      Skills:
                        description: Массив с кодами скиллов, отмеченных пользователем
                        type: array
                        items:
                          type: object
                        example:
                          [{ code: 'ajax' }, { code: 'computersciencebasics' }]
                      Materials:
                        description: Массив с id материалов, отмеченных пользователем
                        type: array
                        items:
                          type: object
                        example: [{ id: 10 }, { id: 11 }]
        '500':
          description: Ошибка получения данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: User is not public
  /user/confirm:
    post:
      tags:
        - user
      summary: Подтверждение почты
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                code: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3QyN0B0ZXN0LnJ1IiwiaWF0IjoxNjQwNzgzODU1fQ.I_U-lBbXmB2PD3mHo2nuLOpTTTch4TrR7lSo8m-rlIQ
      responses:
        '200':
          description: Авторизация прошла успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Сообщение сервера
                    type: string
                    example: User succesfully activated!
                  accessToken:
                    description: Токен пользователя
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3QyN0B0ZXN0LnJ1IiwiaWF0IjoxNjQwNzgzODU1fQ.I_U-lBbXmB2PD3mHo2nuLOpTTTch4TrR7lSo8m-rlIQ
        '500':
          description: Ошибка во время подтверждения
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Link is invalid!
  /user/resetPassword/send:
    post:
      tags:
        - user
      summary: Сброс пароля
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: Электронная почта
                  type: string
                  example: myemail@email.com
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
                example: Code sent
        '500':
          description: Ошибка во время обработки данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: User does not exist
  /user/resetPassword/confirm/:
    post:
      tags:
        - user
      summary: Проверка кода сброса пароля
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resetPasswordCode:
                  description: Код для сброса пароля
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRhbmR5aG9yc2VAeWFuZGV4LnJ1IiwiaWF0IjoxNjM1ODQzMTQwfQ.Lq8HPp6kS61cZEhchOB2nin1oSWReETkUPnijnVS_O0
                newPassword:
                  description: Новый пароль
                  type: string
                  example: password
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
                example: Password succesfully updated!
        '500':
          description: Ошибка во время обработки данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: User does not exist
  /user/updateProfile:
    post:
      tags:
        - user
      summary: Обновление информации о пользователе
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: О себе
                  type: string
                  example: 'Привет! Меня зовут, Андрей. Я фронтенд-программист с 4-летним опытом работы. У меня есть навыки в следующих областях: 1.  HTML 2. сss, lass, sass, scss. 3. JavaScript. 4. react. Хотелось бы получить предложения о работе в этих отраслях.'
                telegram:
                  description: Пароль
                  type: string
                  example: telegramLink
                isLinkShared:
                  description: Открыто ли резюме
                  type: boolean
                  example: true
                isTelegramShared:
                  description: Открыт ли логин телеграма
                  type: boolean
                  example: true
                isNameShared:
                  description: Открыто ли имя
                  type: boolean
                  example: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Авторизация прошла успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Ответ сервера
                    type: string
                    example: Status successfuly updated
        '500':
          description: Ошибка во время обработки данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: User does not exist
  /user/getUserData:
    get:
      tags:
        - user
      summary: Получение информации о текущем пользователе
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    description: Массив с кодами скиллов, отмеченных пользователем
                    type: object
                    properties:
                      id:
                        description: Идентификатор
                        type: string
                        example: 1
                      email:
                        description: Электронная почта
                        type: string
                        example: myemail@email.com
                      name:
                        description: Имя
                        type: string
                        example: Иван
                      lastName:
                        description: Фамилия
                        type: string
                        example: Иванов
                      description:
                        description: Текст "о себе"
                        type: string
                        example: Frontend/Backend JS-разработчик
                      telegram:
                        description: Логин в телеграм
                        type: string
                        example: myTelegramNickname
                      isLinkShared:
                        description: Открыто ли резюме
                        type: boolean
                        example: true
                      isTelegramShared:
                        description: Открыта ли ссылка на телеграм
                        type: boolean
                        example: true
                      isNameShared:
                        description: Открыто ли имя
                        type: boolean
                        example: true
                      Promocodes:
                        description: Массив, содержащий все доступные неактивированные промокоды
                        type: array
                        items:
                          type: object
                        example:
                          [
                            {
                              id: 21,
                              promocode: 'TWF2MZ',
                              created_user_id: 1,
                              used_user_id: null,
                              created_date: '2021-12-30T11:30:12.322Z',
                              used_date: null,
                              type: 'Promocode for shared link',
                              days: 3,
                            },
                          ]
                      Subs:
                        description: Массив, содержащий все подписки, включая бесплатные и полученные через промокод
                        type: array
                        items:
                          type: object
                        example:
                          [
                            {
                              'id': 1,
                              'user_id': 1,
                              'date_start': '2021-12-24T10:46:49.798Z',
                              'date_end': '2022-01-23T10:46:49.798Z',
                              'type': 'Month Sub',
                            },
                            {
                              'id': 2,
                              'user_id': 1,
                              'date_start': '2022-01-23T10:46:49.798Z',
                              'date_end': '2022-02-22T10:46:49.798Z',
                              'type': 'Month Sub',
                            },
                          ]
                      Roles:
                        description: Массив, содержащий все дополнительные роли
                        type: array
                        items:
                          type: object
                        example: [{ code: 'admin' }]
                      ActivationCode:
                        properties:
                          code:
                            description: Код подтверждения почты
                            type: string
                            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InYuc2hhcmtvdkBtZWNoYW5pY2EuYWdlbmN5IiwiaWF0IjoxNjM5NDg3MDk2fQ.O3Sfylm5LLEfZ7HQ9i6k7g_orFXcsg3smtnhFoGa-o0
                      Questions:
                        description: Ответы на вопросы при регистрации
                        type: array
                        items:
                          type: object
                        example:
                          [
                            {
                              label: 'Сфера',
                              UserAnswer: { answer: 'Разработка' },
                            },
                            {
                              label: 'Кто ты?',
                              UserAnswer: { answer: 'Разработчик' },
                            },
                            {
                              label: 'Языки программирования',
                              UserAnswer: { answer: 'JavaScript' },
                            },
                            {
                              label: 'Направление',
                              UserAnswer: { answer: 'Frontend' },
                            },
                          ]
                      Map:
                        properties:
                          id:
                            description: Идентификатор карты пользователя
                            type: number
                            example: 1
                          Skills:
                            description: Массив с кодами скиллов, отмеченных пользователем
                            type: array
                            items:
                              type: object
                            example:
                              [
                                { code: 'ajax' },
                                { code: 'computersciencebasics' },
                              ]
                          Materials:
                            description: Массив с id материалов, отмеченных пользователем
                            type: array
                            items:
                              type: object
                            example: [{ id: 10 }, { id: 11 }]
                  accessToken:
                    description: Новый токен
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjQxOTAyMjk5LCJleHAiOjE2NDE5ODg2OTl9.LNVq3Q42tSwo2Dz8h3PGwuko2iQyUMKVKcPp3N5PSdg
        '500':
          description: Ошибка получения данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: User is not exist
  /user/repeatSendEmail:
    post:
      tags:
        - user
      summary: Повторная отправка письма с кодом подтверждения
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: Электронная почта
                  type: string
                  example: myemail@email.com
      responses:
        '200':
          description: Авторизация прошла успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Id пользователя
                    type: string
                    example: 1
        '500':
          description: Ошибка во время повторной отправки
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Code not found!
  /user/createInvite:
    post:
      tags:
        - user
      summary: Создание нового кода приглашения
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  description: Название токена
                  type: string
                  example: TestToken - 24.12.2021
                time:
                  description: Длительность действия в мс
                  type: number
                  example: 604800
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Новый код создан
          content:
            application/json:
              schema:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjQxODk1MDg3LCJleHAiOjE2NDE5ODE0ODd9.JHvK3JTv_M_Dkucbv9RgAyeZppCFXcd2TJkR2Z7ck2o
        '500':
          description: Ошибка во время создания нового кода
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invite not created
  /user/addRole:
    post:
      tags:
        - user
      summary: Добавление ролей пользователю
      description: |-
        Требуются права администратора

        На данный момент доступна только одна роль: 'admin'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: Идентификатор пользователя
                  type: number
                  example: 1
                addRoles:
                  description: Массив требуемых ролей
                  type: array
                  items:
                    type: string
                  example: ['admin']
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Роли успешно добавлены
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Ответ сервера
                    type: string
                    example: Roles successfuly updated
        '500':
          description: Ошибка во время добавления ролей
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Role does not exist
  /user/changeEmail:
    post:
      tags:
        - user
      summary: Изменить почту пользователя (для администратора)
      description: |-
        Альтернатива удалению пользователя. Требуются права администратора
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  description: Идентификатор пользователя
                  type: number
                  example: 2
                email:
                  description: Почтовый адрес
                  type: string
                  example: myemail@email.com
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Почтовый адрес успешно изменен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Ответ сервера
                    type: string
                    example: Email successfuly updated
        '500':
          description: Ошибка во время изменения почты
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: User does not exist
  /map/addSkill:
    post:
      tags:
        - map
      summary: Отметить скилл освоенным
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                skillCode:
                  description: Буквенный код скилла
                  type: string
                  example: json
                mapId:
                  description: Идентификатор карты пользователя
                  type: number
                  example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Скилл добавлен пользователю
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Ответ сервера
                    type: string
                    example: Skill succesfully added
                  skillCode:
                    description: Буквенный код добавленного скилла
                    type: string
                    example: json
        '500':
          description: Ошибка во время добавления скилла
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: sub required
  /map/removeSkill:
    post:
      tags:
        - map
      summary: Удаление скилла из карты компетенций пользователя
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                skillCode:
                  description: Буквенный код удаляемого скилла
                  type: string
                  example: json
                mapId:
                  description: Идентификатор карты компетенций пользователя
                  type: number
                  example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Скилл удалён
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Ответ сервера
                    type: string
                    example: Skill succesfully removed
                  skillCode:
                    description: Буквенный код удаляемого скилла
                    type: string
                    example: json
        '500':
          description: Ошибка во время удаления скилла
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: sub required
  /map/addMaterial:
    post:
      tags:
        - map
      summary: Отметить материал изученным
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                materialId:
                  description: Идентификатор добавляемого материала
                  type: number
                  example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Материал добавлен пользователю
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Ответ сервера
                    type: string
                    example: Material succesfully added
                  materialId:
                    description: Идентификатор добавленного материала
                    type: number
                    example: 1
        '500':
          description: Ошибка во время добавления материала
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: sub required
  /map/removeMaterial:
    post:
      tags:
        - map
      summary: Удаление материала из карты компетенций пользователя
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                materialId:
                  description: Идентификатор удаляемого материала
                  type: number
                  example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Материал удалён из карты компетенций пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Ответ сервера
                    type: string
                    example: Material succesfully removed
                  materialId:
                    description: Идентификатор удаленного материала
                    type: number
                    example: 1
        '500':
          description: Ошибка во время удаления материала
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: sub required
  /skill/{skillCode}:
    get:
      tags:
        - skill
      summary: Информация о конкретном скилле
      parameters:
        - in: path
          name: skillCode
          schema:
            type: string
            example: json
          required: true
          description: Буквенный код скилла
      responses:
        '200':
          description: Данные скилла получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Уникальный идентификатор
                    type: number
                    example: 1
                  code:
                    description: Буквенный код
                    type: string
                    example: json
                  title:
                    description: Название
                    type: string
                    example: JSON
                  description:
                    description: Описание
                    type: string
                    example: JSON (JavaScript Object Notation) - простой формат обмена данными, удобный для чтения и написания как человеком, так и компьютером.
                  level:
                    description: Грейд
                    type: string
                    enum:
                      - junior
                      - middle
                      - senior
                    example: junior
                  difficulty:
                    description: Сложность освоения
                    type: number
                    enum:
                      - 1
                      - 2
                      - 3
                      - 4
                    example: 2
                  study_time:
                    description: Время в месяцах, необходимое для освоения
                    type: number
                    example: 5
                  Materials:
                    description: Список материалов, которые связаны с данным скиллом
                    type: array
                    items:
                      type: object
                    example:
                      [
                        {
                          'id': 11,
                          'url': 'https://github.com/denysdovhan/learnyouhtml',
                          'label': 'Learnyouhtml',
                          'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer orci velit, rutrum non pulvinar quis, euismod id mi. Aenean ipsum mi, fermentum facilisis interdum id, rhoncus nec ipsum. Ut vitae quam eros. ',
                          'time': 99,
                          'is_free': true,
                          'type': 'article',
                          'hidden': null,
                        },
                      ]
                  Specializations:
                    description: Список специализаций, в которых выводится скилл
                    type: array
                    items:
                      type: object
                    example: [{ 'code': 'frontend' }, { 'code': 'java' }]
        '404':
          description: Ошибка получения данных
  /skill/addMaterial:
    post:
      tags:
        - skill
      summary: Привязать материал к скиллу
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                skillCode:
                  description: Буквенный код скилла
                  type: string
                  example: json
                materialId:
                  description: Идентификатор материала
                  type: string
                  example: 4
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Материал успешно привязан
        '500':
          description: Ошибка во время добавления материала
  /skill/removeMaterial:
    delete:
      tags:
        - skill
      summary: Отвязать материал от скилла
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                skillCode:
                  description: Буквенный код скилла
                  type: string
                  example: json
                materialId:
                  description: Идентификатор материала
                  type: string
                  example: 4
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Материал успешно отвязан
        '500':
          description: Ошибка во время удаления материала
  /skill/list:
    get:
      tags:
        - skill
      summary: Получить список скиллов
      responses:
        '200':
          description: Список скиллов получен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  [
                    {
                      'id': 1,
                      'code': 'computersciencebasics',
                      'title': 'Computer science (basics)',
                      'description': 'Основы программирования и Computer Science - это те самые фундаментальные знания, которые необходимы каждому, кто хочет стать настоящим инженером, ведь нужно не просто знать, как писать код, но и понимать, как  этот код работает сейчас и будет работать при других условиях.',
                      'level': 'junior',
                      'difficulty': 2,
                      'Materials':
                        [
                          {
                            'url': 'https://www.codewars.com/dashboard',
                            'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer orci velit, rutrum non pulvinar quis, euismod id mi. Aenean ipsum mi, fermentum facilisis interdum id, rhoncus nec ipsum. Ut vitae quam eros. ',
                          },
                        ],
                    },
                  ]
        '404':
          description: Ошибка получения данных
  /skill/add:
    post:
      tags:
        - skill
      summary: Добавить новый скилл
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  description: Буквенный код
                  type: string
                  example: computersciencebasics
                title:
                  description: Название
                  type: string
                  example: Computer science (basics)
                description:
                  description: Описание
                  type: string
                  example: Основы программирования и Computer Science - это те самые фундаментальные знания, которые необходимы каждому, кто хочет стать настоящим инженером, ведь нужно не просто знать, как писать код, но и понимать, как  этот код работает сейчас и будет работать при других условиях
                level:
                  description: Грейд
                  type: string
                  enum:
                    - junior
                    - middle
                    - senior
                  example: junior
                difficulty:
                  description: Сложность освоения
                  type: number
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 3
                study_time:
                  description: Время, необходимое на освоение
                  type: number
                  example: 4
                materials:
                  description: Список материалов, которые привязаны к скиллу
                  type: array
                  items:
                    type: number
                  example: [1, 2]
                specializations:
                  description: Список специализаций, к которым необходимо привязать скилл
                  type: array
                  items:
                    type: string
                  example: ['frontend']
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Скилл успешно добавлен
        '400':
          description: Ошибка во время добавления скилла
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /skill/update:
    post:
      tags:
        - skill
      summary: Обновить информацию о скилле
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  description: Буквенный код
                  type: string
                  example: html
                title:
                  description: Название
                  type: string
                  example: HTML
                description:
                  description: Описание
                  type: string
                  example: >-
                    HTML — (от англ. HyperText Markup Language — «язык
                    гипертекстовой разметки») — язык разметки, определяющий
                    структуру веб-страниц. Большинство веб-страниц в интернете
                    содержат описание разметки на языке HTML.
                difficulty:
                  description: Сложность освоения
                  type: number
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 2
                level:
                  description: Грейд
                  type: string
                  enum:
                    - junior
                    - middle
                    - senior
                  example: junior
                addedMaterials:
                  description: Список материалов, которые необходимо привязать к скиллу
                  type: array
                  items:
                    type: number
                  example: [1, 2]
                addedSpecializations:
                  description: Список специализаций, к которым необходимо привязать скилл
                  type: array
                  items:
                    type: string
                  example: ['frontend']
                removedMaterials:
                  description: Список материалов, которые необходимо отвязать от скилла
                  type: array
                  items:
                    type: number
                  example: [3, 4]
                removedSpecializations:
                  description: Список специализаций, от которых необходимо отвязать скилл
                  type: array
                  items:
                    type: string
                  example: ['backend']
                study_time:
                  description: Время, необходимое для освоения
                  type: string
                  example: 5
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Скилл успешно обновлён
        '400':
          description: Ошибка во время обновления скилла
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /skill/remove:
    post:
      tags:
        - skill
      summary: Удалить скилл
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  description: Буквенный код скилла
                  type: string
                  example: json
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Скилл успешно удалён
          content:
            application/json:
              schema:
                description: Буквенный код удаленного скилла
                type: string
                example: json
        '500':
          description: Ошибка удаления скилла
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /specialization/detail/{specializationCode}:
    get:
      tags:
        - specialization
      summary: Получить детальную информацию о специализации
      parameters:
        - in: path
          name: specializationCode
          schema:
            type: string
            example: frontend
          required: true
          description: Буквенный код специализации
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    description: Название
                    type: string
                    example: Frontend
                  code:
                    description: Буквенный код
                    type: string
                    example: frontend
                  description:
                    description: Описание
                    type: string
                    example: 'Фронтендеры создают лицо сайта — то, что вы видите, попав на любую страницу в интернете. А ещё организуют логичную работу компонентов сайта: контента, кнопок, внутренних ссылок'
                  status:
                    description: Статус видимости
                    type: string
                    enum:
                      - visible
                      - hidden
                    example: visible
                  id:
                    description: Уникальный идентификатор
                    type: number
                    example: 1
                  Skills:
                    description: Список скиллов, прикрепленных к специализации
                    type: array
                    items:
                      type: object
                    example:
                      [
                        {
                          'code': 'computersciencebasics',
                          'title': 'Computer science (basics)',
                          'level': 'junior',
                        },
                        {
                          'code': 'markdown',
                          'title': 'Markdown',
                          'level': 'junior',
                        },
                      ]
        '404':
          description: Специализация не найдена
  /specialization/addSkill:
    post:
      tags:
        - specialization
      summary: Добавить скилл к специализации
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                specializationCode:
                  description: Буквенный код специализации
                  type: string
                  example: frontend
                skillCode:
                  description: Буквенный код скилла
                  type: string
                  example: html
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Скилл успешно добавлен
        '400':
          description: Ошибка во время добавления скилла
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /specialization/removeSkill:
    delete:
      tags:
        - specialization
      summary: Отвязать скилл от специализации
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                specializationCode:
                  description: Буквенный код специализации
                  type: string
                  example: frontend
                skillCode:
                  description: Буквенный код скилла
                  type: string
                  example: html
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Скилл успешно отвязан от специализации
        '400':
          description: Ошибка во время удаления скилла
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /specialization/add:
    post:
      tags:
        - specialization
      summary: Добавить специализацию
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  description: Буквенный код
                  type: string
                  example: nodejs
                name:
                  description: Название
                  type: string
                  example: NodeJS
                description:
                  description: Описание
                  type: string
                  example: Это технология, с помощью которой пишут backend на JavaScript. Изучив Node.js, frontend-разработчики становятся fullstack-разработчиками — выполняют более сложные и интересные задачи и переходят на позиции с большей оплатой
                status:
                  description: Статус видимости специализации (true - доступна пользователям / false -  скрыта)
                  type: boolean
                  example: false
                skills:
                  description: Список скиллов, привязанных к специализации
                  type: array
                  items:
                    type: string
                  example: ['html', 'css']
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Специализация успешно добавлена
        '400':
          description: Ошибка во время добавления специализации
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /specialization/getSpecializationList:
    get:
      tags:
        - specialization
      summary: Получить список специализаций
      responses:
        '200':
          description: Список специализаций получен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  [
                    {
                      'code': 'frontend',
                      'title': 'Frontend',
                      'description': 'Фронтендеры создают лицо сайта — то, что вы видите, попав на любую страницу в интернете. А ещё организуют логичную работу компонентов сайта: контента, кнопок, внутренних ссылок.',
                      'status': 'visible',
                      'Skills':
                        [
                          { 'code': 'html', 'title': 'HTML' },
                          { 'code': 'figma', 'title': 'Figma' },
                          {
                            'code': 'javascriptbasics',
                            'title': 'JavaScript (basics)',
                          },
                        ],
                    },
                  ]
        '400':
          description: Ошибка получения списка специализаций
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /specialization/updateSpecialization:
    post:
      tags:
        - specialization
      summary: Обновить специализацию
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: Уникальный идентификатор специализации, по которому определяется, в какую специализацию необходимо внести изменения
                  type: number
                  example: 1
                name:
                  description: Название
                  type: string
                  example: Frontend
                description:
                  description: Описание
                  type: string
                  example: 'Фронтендеры создают лицо сайта — то, что вы видите, попав на
                  любую страницу в интернете. А ещё организуют логичную работу
                  компонентов сайта: контента, кнопок, внутренних ссылок.'
                code:
                  description: Буквенный код
                  type: string
                  example: frontend
                status:
                  description: Статус видимости (true - доступна для пользователей / false - скрыта)
                  type: boolean
                  example: true
                addedSkillsList:
                  description: Список скиллов, которые необходимо привязать к специализации
                  type: array
                  items:
                    type: string
                  example: ['html', 'css']
                deletedSkillsList:
                  description: Список скиллов, которые необходимо отвязать от специализации
                  type: array
                  items:
                    type: string
                  example: ['json']
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Специализация успешно обновлена
        '400':
          description: Ошибка во время обновления специализации
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /specialization/remove:
    post:
      tags:
        - specialization
      summary: Удалить специализацию
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  description: Буквенный код удаляемой специализации
                  type: string
                  example: frontend
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Специализация успешно удалена
          content:
            application/json:
              schema:
                description: Буквенный код удаленной специализации
                type: string
                example: frontend
        '400':
          description: Ошибка во время удаления специализации
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Specialization does not exist
  /material/add:
    post:
      tags:
        - material
      summary: Добавить материал
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  description: Название
                  type: string
                  example: Учебник по таблицам стилей
                url:
                  description: Ссылка на материал
                  type: string
                  example: https://google.com
                description:
                  description: Описание
                  type: string
                  example: lorem ipsum
                code:
                  description: Буквенный код
                  type: string
                  example: cssinfo
                type:
                  description: Тип материала
                  type: string
                  enum: 
                    - article
                    - video
                    - education
                  example: video
                time:
                  description: Время на освоение
                  type: number
                  example: 2
                is_free:
                  description: Бесплатность курса
                  type: boolean
                  example: true
                skills:
                  description: Массив со связанными скиллами
                  type: array
                  items:
                    type: string
                  example: ['html']
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Материал успешно добавлен
        '500':
          description: Ошибка во время добавления материала
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /material/remove:
    post:
      tags:
        - material
      summary: Удалить материал
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: Уникальный идентификатор материала
                  type: number
                  example: 4
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Материал успешно удалён
          content:
            application/json:
              schema:
                type: object
                properties:
                  deletedMaterialId:
                    description: Идентификатор удаленного материала
                    type: number
                    example: 1
        '500':
          description: Ошибка во время удаления материала
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Material does not exist
  /material/list:
    get:
      tags:
        - material
      summary: Получить список материалов
      responses:
        '200':
          description: Список материалов получен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: [{
                          "id": 1,
                          "url": "https://habr.com/ru/company/vertdider/blog/403823/",
                          "label": "Легендарный гарвардский курс CS50",
                          "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer orci velit, rutrum non pulvinar quis, euismod id mi. Aenean ipsum mi, fermentum facilisis interdum id, rhoncus nec ipsum. Ut vitae quam eros. ",
                          "type": "article",
                          "time": 99,
                          "is_free": true,
                          "hidden": null
                      },
                      {
                          "id": 4,
                          "url": "https://vk.com/wall-54530371_11457",
                          "label": "Роберт Лафоре. \"Структуры данных и алгоритмы в Java\"",
                          "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer orci velit, rutrum non pulvinar quis, euismod id mi. Aenean ipsum mi, fermentum facilisis interdum id, rhoncus nec ipsum. Ut vitae quam eros. ",
                          "type": "article",
                          "time": 99,
                          "is_free": true,
                          "hidden": null
                      }]
        '500':
          description: Ошибка получения списка материалов
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Server error
  /material/get:
    post:
      tags:
        - material
      summary: Получить информацию о конкретном материале
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: Уникальный идентификатор материала
                  type: number
                  example: 10
      responses:
        '200':
          description: Информация о материале
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Идентификатор материала
                    type: number
                    example: 51
                  url:
                    description: Ссылка на материал
                    type: string
                    example: https://www.youtube.com/watch?v=2CSr2vBApSI&list=PL55RiY5tL51pT0DNJraU93FhMzhXxtDAo
                  label:
                    description: Название
                    type: string
                    example: Academind - \"Vue.js 2 & Vuex (Basics)\"
                  description:
                    description: Описание
                    type: string
                    example: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer orci velit, rutrum non pulvinar quis, euismod id mi. Aenean ipsum mi, fermentum facilisis interdum id, rhoncus nec ipsum. Ut vitae quam eros.
                  type:
                    description: Тип
                    type: string
                    enum: 
                      - article
                      - video
                      - education
                    example: article
                  time:
                    description: Время на освоение
                    type: string
                    example: 5
                  is_free:
                    description: Является ли бесплатным
                    type: boolean
                    example: true
                  hidden:
                    description: Является ли скрытым
                    type: boolean
                    example: false
                  Skills:
                    description: Список связанных скиллов
                    type: array
                    items:
                      type: object
                    example: [{
                                  "code": "vuex"
                              }]
        '500':
          description: Ошибка получения данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Material not found
  /material/update:
    post:
      tags:
        - material
      summary: Обновить материал
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id: 
                  description: Уникальный идентификатор, по которому определяется, какой материал необходимо обновить
                  type: number
                  example: 303
                label:
                  description: Название
                  type: string
                  example: Изучение CSS
                url:
                  description: Ссылка на материал
                  type: string
                  example: https://google.com
                description:
                  description: Описание 
                  type: string
                  example: Lorem ipsum
                type: 
                  description: Тип
                  type: string
                  enum:
                    - article
                    - video
                    - education
                  example: article
                time:
                  description: Время, необходимое на освоение
                  type: number
                  example: 22
                is_free:
                  description: Является ли материал бесплатным
                  type: boolean
                  example: true
                addedSkills:
                  description: Скиллы, к которым необходимо добавить материал
                  type: array
                  items:
                    type: string
                  example: ['css']
                removedSkills:
                  description: Скиллы, от которых необходимо отвязать материал
                  type: array
                  items:
                    type: string
                  example: ['html']
                hidden: 
                  description: Статус скрытия материала
                  type: boolean
                  example: false
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Материал успешно обновлён
        '500':
          description: Ошибка во время обновления материала
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Material not found
  /answer/add:
    post:
      tags:
        - answer
      summary: Добавить ответ
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:                  
                questionId:
                  description: Идентификатор вопроса
                  type: number
                  enum: 
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 1
                answer:
                  description: Ответ
                  type: string
                  example: Веб-разработчик
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Ответ успешно записан
        '500':
          description: Ошибка при записи ответа
  /answer/questions:
    get:
      tags:
        - answer
      summary: Получить список вопросов
      responses:
        '200':
          description: Список вопросов
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: [{
                      "id": 1,
                      "label": "Сфера",
                      "code": "scope",
                      "answers": [
                          "Разработка",
                          "Тестирование",
                          "Маркетинг"
                      ]
                  },
                  {
                      "id": 2,
                      "label": "Кто ты?",
                      "code": "whoareyou",
                      "answers": [
                          "Не выбрано",
                          "Разработчик",
                          "Тимлид"
                      ]
                  }]
        '404':
          description: Ошибка во время получения списка вопросов
  /ticket/get:
    post:
      tags:
        - ticket
      summary: Получить информацию о пользовательском отзыве
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: Уникальный идентификатор
                  type: number
                  example: 2
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /ticket/close:
    post:
      tags:
        - ticket
      summary: Закрыть тикет
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: Уникальный идентификатор
                  type: number
                  example: 2
                withLetter:
                  description: Отправить письмо-ответ
                  type: boolean
                  example: true
                message:
                  description: Сообщение, вложенное в письмо пользователю
                  type: string
                  example: Спасибо за обращение. Жалоба рассмотрена, ссылки обновлены!
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Тикет закрыт
          content:
            application/json:
              schema:
                type: string
                example: Ticket closed
        '500':
          description: Ошибка во время закрытия тикета
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Ticket not found
  /ticket/add:
    post:
      tags:
        - ticket
      summary: Добавить тикет
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                material_id:
                  description: Уникальный идентификатор материала
                  type: number
                  example: 2
                message:
                  description: Сообщение пользователя
                  type: string
                  example: Ссылка на материал не работает
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Тикет успешно добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Ответ сервера
                    type: string
                    example: Ticket succesfully added
        '500':
          description: Ошибка во время добавления тикета
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid material id
  /ticket/list:
    get:
      tags:
        - ticket
      summary: Получить список тикетов
      description: |-
        Требуются права администратора.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список тикетов получен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: [{
                        "id": 3,
                        "material_id": 3,
                        "user_id": 1,
                        "message": "Test message 3",
                        "status": true,
                        "date": "2021-12-20T11:02:05.662Z",
                        "Material": {
                            "id": 3,
                            "label": "Codewars",
                            "url": "https://www.codewars.com/dashboard",
                            "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer orci velit, rutrum non pulvinar quis, euismod id mi. Aenean ipsum mi, fermentum facilisis interdum id, rhoncus nec ipsum. Ut vitae quam eros. "
                        },
                        "User": {
                            "id": 1,
                            "name": "Владислав",
                            "lastName": "Шарков",
                            "email": "v.sharkov@mechanica.agency"
                        }
                    }]
        '500':
          description: Ошибка во время получения списка тикетов
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /ticket/feedbackList:
    get:
      tags:
        - ticket
      summary: Получить список отзывов
      description: |-
        Требуются права администратора.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список отзывов загружен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: [{
                      "id": 4,
                      "type": "newItem",
                      "user_id": 1,
                      "message": "test newItem message, test newItem message, test newItem message, test newItem message, test newItem message",
                      "status": true,
                      "date": "2021-12-28T07:58:12.200Z",
                      "User": {
                          "id": 1,
                          "name": "Владислав",
                          "lastName": "Шарков",
                          "email": "v.sharkov@mechanica.agency"
                      }
                  }]
        '500':
          description: Ошибка во время получения списка
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /ticket/addFeedback:
    post:
      tags:
        - ticket
      summary: Добавить отзыв
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  description: Тип отзыва (trouble - баг / newItem - предложить материал или скилл / feedback - отзыв)
                  type: string
                  enum:
                    - trouble
                    - newItem
                    - feedback
                  example: trouble
                message:
                  description: Сообщение пользователя
                  type: string
                  example: Я куда-то нажал, и всё пропало
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Отзыв успешно добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Ответ сервера
                    type: string
                    example: Feedback succesfully added
        '500':
          description: Ошибка во время добавления отзыва
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid type
  /sub/addMonth:
    post:
      tags:
        - sub
      summary: Добавить месячную подписку
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  description: Уникальный идентификатор пользователя
                  type: number
                  example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Подписка успешно добавлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  subEnds:
                    description: Дата окончания подписки с учетом всех уже существующих
                    type: string
                    example: '2021-12-28T07:58:12.200Z'
        '500':
          description: Ошибка во время добавления подписки
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: User not found or not activated!
  /sub/list:
    get:
      tags:
        - sub
      summary: Получить список подписок
      description: |-
        Требуются права администратора.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список подписок загружен
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Список всех подписок
                    type: array
                    items:
                      type: object
                    example: [{
                                "id": 1,
                                "user_id": 1,
                                "date_start": "2021-12-24T10:46:49.798Z",
                                "date_end": "2022-01-23T10:46:49.798Z",
                                "type": "Month Sub",
                                "User": {
                                    "name": "Владислав",
                                    "lastName": "Шарков",
                                    "email": "v.sharkov@mechanica.agency"
                                }
                            }]
        '400':
          description: Ошибка получения списка подписок
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /sub/addPromocode:
    post:
      tags:
        - sub
      summary: Добавить новый промокод
      description: |-
        Требуются права администратора.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                  days:
                    description: Количество дней подписки, добавляемое при активации промокода
                    type: number
                    example: 10
                  type:
                    description: Описание промокода
                    type: string
                    example: Welcome promocode
                  created_user_id:
                    description: Идентификатор пользователя, в чьём личном кабинете будет выводиться данный промокод
                    type: number
                    example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Промокод успешно добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Уникальный идентификатор созданного промокода
                    type: number
                    example: 22
                  promocode:
                    description: Промокод
                    type: string
                    example: JTK2RT
                  created_date:
                    description: Дата создания
                    type: string
                    example: '2021-12-28T07:58:12.200Z'
                  type:
                    description: Описание промокода
                    type: string
                    example: Welcome promocode
                  days:
                    description: Количество дней подписки, добавляемое при активации промокода
                    type: number
                    example: 10
                  created_user_id:
                    description: Идентификатор пользователя, в чьём личном кабинете будет выводиться данный промокод
                    type: number
                    example: 1
                  used_user_id:
                    description: Идентификатор пользователя, использовавшего промокод
                    type: number
                    example: null
                  used_date:
                    description: Дата использования промокода
                    type: string
                    example: null
        '500':
          description: Ошибка во время создания промокода
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /sub/usePromocode:
    post:
      tags:
        - sub
      summary: Использовать промокод
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  description: Идентификатор пользователя
                  type: number
                  example: 1
                code:
                  description: Промокод
                  type: string
                  example: GDN5XF
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Промокод успешно использован
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Идентификатор промокода
                    type: number
                    example: 22
                  newLastDate:
                    description: Дата окончания подписки с учетом всех уже активных
                    type: string
                    example: '2021-12-28T07:58:12.200Z'
        '500':
          description: Ошибка во время использования промокода
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Promocode not found
  /sub/promoList:
    get:
      tags:
        - sub
      summary: Получить список промокодов
      description: |-
        Требуются права администратора.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список промокодов загружен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: [{
                            "id": 21,
                            "promocode": "TWL2MZ",
                            "created_user_id": 1,
                            "used_user_id": null,
                            "created_date": "2021-12-30T11:30:12.322Z",
                            "used_date": null,
                            "type": "Promocode for shared link",
                            "days": 3,
                            "User": {
                                "name": "Владислав",
                                "lastName": "Шарков",
                                "email": "v.sharkov@mechanica.agency"
                            }
                        }]
        '500':
          description: Ошибка во время загрузки списка промокодов
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid code
  /sub/userPromoList:
    get:
      tags:
        - sub
      summary: Получить список промокодов определенного пользователя
      description: id пользователя берется из bearer-токена, которым сопровождается запрос
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список промокодов загружен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: [{
                            "id": 21,
                            "promocode": "TWL2MZ",
                            "created_user_id": 1,
                            "used_user_id": null,
                            "created_date": "2021-12-30T11:30:12.322Z",
                            "used_date": null,
                            "type": "Promocode for shared link",
                            "days": 3,
                            "User": {
                                "name": "Владислав",
                                "lastName": "Шарков",
                                "email": "v.sharkov@mechanica.agency"
                            }
                        }]
        '500':
          description: Ошибка во время загрузки списка промокодов
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Invalid id
  /sub/addPromocodeForSharedLink:
    get:
      tags:
        - sub
      summary: Добавить промокод пользователю, который поделился ссылкой на страницу специализации или скилла
      description: >-
        Срабатывает только один раз для каждого пользователя
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Промокод успешно добавлен
          content:
            application/json:
              schema:
                type: string
                example: Promocode added
        '500':
          description: Ошибка во время добавления промокода
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    description: Описание возникшей ошибки
                    type: string
                    example: Promocode was already added
